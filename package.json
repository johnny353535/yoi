{
  "name": "yoshino-yoi",
  "version": "1.0.0",
  "description": "The Yoshino frontend component library.",
  "author": "yoshino.digital dev team",
  "devDependencies": {
    "autoprefixer": "^9.4.4",
    "bower": "^1.8.4",
    "chokidar-cli": "^1.2.1",
    "cssnano": "^4.1.8",
    "less": "^3.9.0",
    "postcss-cli": "^6.1.0",
    "uglify-js": "^3.4.9"
  },
  "scripts": {
    "postinstall": "npm run install-jekyll && npm run install-gems && bower update",
    "install-jekyll": "gem install --user-install --bindir ~/bin --no-document --pre --verbose jekyll",
    "install-gems": "cd docs && gem install bundler && bundle install",
    "build": "npm run clean && npm run build-scripts && npm run build-styles && npm run copy && npm run build-jekyll",
    "build-jekyll": "npm run copy-docs && cd docs && bundle exec jekyll serve --config _config.yml --open",
    "build-scripts": "uglifyjs src/js/yoi.js src/js/behaviors/*.js src/js/actions/*.js src/js/modules/*.js src/components/**/*.js --source-map-inline --beautify -o dist/js/yoi.js && npm run copy-scripts",
    "build-styles": "npm run styles-compile --source-map-map-inline && npm run styles-process && npm run copy-styles",
    "styles-process": "postcss -u autoprefixer -b 'last 2 versions, not dead, > 1%, ie >= 11' dist/css/yoi.css -o dist/css/yoi.css --no-map",
    "styles-compress": "postcss -u cssnano -o dist/css/yoi.css dist/css/yoi.css --no-map",
    "styles-compile": "(cat src/less/yoi.less ; echo $(find src/components -name '*.less' -exec echo '@import \"./{}\";' \\;)) | lessc - dist/css/yoi.css --include-path=./src/less",
    "clean": "npm run clean-dist && npm run clean-docs",
    "clean-dist": "rm -rf dist && mkdir dist && mkdir dist/css dist/img dist/js",
    "clean-docs": "rm -rf docs/_site && mkdir docs/_site && rm -rf docs/assets && mkdir docs/assets && mkdir docs/assets/css docs/assets/img docs/assets/js",
    "copy": "npm run copy-favicon && npm run copy-images && npm run copy-scripts && npm run copy-styles",
    "copy-favicon": "rsync -av --exclude='readme.md' src/favicon/* docs/",
    "copy-images": "cp src/img/* dist/img && cp dist/img/* docs/assets/img",
    "copy-scripts": "cp dist/js/* docs/assets/js && cp bower_components/jquery/dist/jquery.min.js docs/assets/js",
    "copy-styles": "cp dist/css/* docs/assets/css",
    "copy-docs": "cp src/components/**/*.md docs/_pages/components",
    "publish": "npm run clean && npm run publish-scripts && npm run publish-styles && npm run copy && npm run publish-jekyll",
    "publish-jekyll": "npm run copy-docs && cd docs && JEKYLL_ENV=production bundle exec jekyll build --config _config.yml",
    "publish-scripts": "uglifyjs src/js/yoi.js src/js/behaviors/*.js src/js/actions/*.js src/js/modules/*.js src/components/**/*.js --compress -o dist/js/yoi.js && npm run copy-scripts",
    "publish-styles": "npm run styles-compile && npm run styles-process && npm run styles-compress && npm run copy-styles",
    "watch-docs": "chokidar 'src/components/**/*.md' -c 'npm run copy-docs'",
    "watch-scripts": "chokidar 'src/js/**/*' 'src/components/**/*.js' -c 'npm run build-scripts'",
    "watch-styles": "chokidar 'src/less/**/*' 'src/components/**/*.less' -c 'npm run build-styles'",
    "watch": "npm run watch-styles & npm run watch-scripts & npm run watch-docs",
    "dev": "npm run build & npm run watch"
  }
}
