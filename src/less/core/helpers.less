/** helpers.less */

.mixin-clearfix() {
    &::after {
        content: "";
        display: block;
        clear: both;
    }
}

.mixin-hide() {

    /**
     * visually hides an element while
     * keeping it accessible to screenreaders
     */

    height: 1px;
    opacity: 0;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;

}

.mixin-show() {

    /**
     * reverts .mixin-hide()
     * https://caniuse.com/#feat=css-unset-value
     */

    height: unset;
    opacity: unset;
    overflow: unset;
    padding: unset;
    position: unset;
    width: unset;

}

.mixin-clearAppearance() {
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;

    &::-webkit-search-decoration,
    &::-webkit-search-cancel-button,
    &::-webkit-search-results-button,
    &::-webkit-search-results-decoration {
      display: none;
    }

}

.mixin-userSelectNone() {
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    user-select: none;
}

.mixin-defaultBorderRadius() {
    border-radius: (@defaultBorderRadius * 1px);
}

.mixin--enable3d() {

    /**
     *  may increase animation performance
     *  http://blog.teamtreehouse.com/increase-your-sites-performance-with-hardware-accelerated-css
     */

    transform: translateZ(0);

}

.mixin--fixFlickering() {

    /**
     *  may fix flickering in 3d animations/transitions
     *  http://blog.teamtreehouse.com/increase-your-sites-performance-with-hardware-accelerated-css
     */

    backface-visibility: hidden;
    perspective: 1000;

}

// accessabilty

.mixin-disabled() {
    cursor: default;
    opacity: .5;
}

.mixin-defaultFocus() {
    box-shadow: 0 0 0 2px fade(@focusColor,100%);
    border-color: @color-blue-18;
    outline: 0;
}

.mixin-tabFocus() {
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-name: tabFocus;
    animation-timing-function: ease-out;
    box-shadow: none;
    outline-color: @focusColor;
    outline-offset: 1rem;
    outline-radius: @defaultBorderRadius * 1px;
    outline-style: solid;
    outline-width: 0.2rem;
    z-index: 101;
}

.mixin-tabFocus-inset() {

    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-name: tabFocusInset;
    animation-timing-function: ease-out;

    @keyframes tabFocus {
        from {
            outline-color: @focusColor;
        } to {
            outline-color: @color-transparent;
        }
    }

    @keyframes tabFocusInset {
        from {
            box-shadow:
                inset 2px 0 0 @focusColor,
                inset 0 2px 0 @focusColor,
                inset -2px 0 @focusColor,
                inset 0 -2px 0 @focusColor
        } to {
            box-shadow:
                inset 2px 0 0 @color-transparent,
                inset 0 2px 0 @color-transparent,
                inset -2px 0 @color-transparent,
                inset 0 -2px 0 @color-transparent
        }
    }

}
