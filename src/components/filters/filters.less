/** filters.less */

.filters {

    .mixin-defaultBorderRadius;
    border: @color-base-23 1px solid;
    position: relative;

    // disabled filters (while update is runnig)

    &.filters--disabled::after {
        background: @color-white;
        bottom: 0;
        content: ' ';
        left: 0;
        opacity: .5;
        position: absolute;
        right: 0;
        top: 0;
        z-index: 3;
    }

}

.filters__header {
    font-size: 1.5rem;
    font-weight: bold;
    height: 4rem;
    line-height: 4rem;
    padding: 0 1rem;
}

.filters__resetBtn {
    
    .mixin-icon-bg(@id: 'icon-006-s', @fillColor: @color-negative-10);
    background-position: 0 center;
    display: block;
    font-size: 1.5rem;
    font-weight: bold;
    height: 4rem;
    line-height: 4rem;
    padding: 0 1rem 0 3.2rem;
    
    &:link, &:active, &:visited {
        color: @color-base-8;
        text-decoration: none;
    }

    &:hover {
        background-color: fade(@color-base-25,50%);
        color: @color-base-5;
    }
    
    & + .filters__header {
        display: none;
    }
    
}

// filter group

.filterGroup {

    .mixin-clearfix;
    margin: 0;
    position: relative;

    // header

    .filterGroup__header {

        .mixin-userSelectNone;
        background: @color-base-25;
        border-top: @color-base-23 1px solid;
        box-sizing: border-box;
        cursor: pointer;
        height: 3.5rem;
        position: relative;

        h4 {
            line-height: 2.5rem;
            padding: .5rem 1rem;
            text-transform: none;
        }

    }

    &:not(.filterGroup--collapsed) .filterGroup__header,
    &.filterGroup--collapsed.filterGroup--hasActiveFilters .filterGroup__header {
        border-bottom: @color-base-23 1px solid;
    }

    // scrollable filter bodies

    &.filterGroup--isScroll .filterGroup__body {

        /*
            Applied via JS. Adds an overflow and native scrollbars
            if content is larger than max-height.
        */

        max-height: 18.5rem;
        overflow: hidden;
        overflow-y: scroll;

    }

    &.filterGroup--isScroll .filterGroup__body::after,
    &.filterGroup--isScroll .filterGroup__body::before {

        /*
            Shadow to indicate scrolling/overflow,
            initially hidden (zero height & opacity).
        */

        content: ' ';
        height: 0;
        left: 0;
        opacity: 0;
        position: absolute;
        right: 0;
        transition: opacity 700ms ease-out;
        z-index: 2;

    }

    // show shadows

    &.filterGroup--hasShadow .filterGroup__body::after,
    &.filterGroup--hasShadow .filterGroup__body::before {
        opacity: 1;
        height: 1rem;
    }

    // shadow on top

    &.filterGroup--hasShadow .filterGroup__body::before {
        background: linear-gradient(to bottom, fade(@color-base-17, 30%), @color-transparent);
        top: 3.5rem;
    }

    // shadow on bottom

    &.filterGroup--hasShadow .filterGroup__body::after {
        background: linear-gradient(to bottom, @color-transparent, fade(@color-base-17, 30%));
        bottom: 0;
    }

}

// filter buttons

.filter {

    display: block;
    margin: 0;
    padding: .5rem 3rem;
    position: relative;

    &:link, &:active, &:visited {
        color: @color-base-8;
        text-decoration: none;
    }

    &:hover {
        background: fade(@color-base-25,50%);
    }

    &.is--active {
        color: @color-base-5;
        font-weight: bold;
    }

    // counter

    .filter__counter {
        color: @color-base-15;
        font-weight: normal;
        position: absolute;
        right: .5rem;
        top: .5rem;
    }

    // pseudo input elements

    &::before {
        box-sizing: border-box;
        content: ' ';
        display: inline-block;
        position: absolute;
    }

    &:hover::before {
        background: @color-base-24;
    }

    // multiple selects (like checkbox)

    &.filter--multi {

        &::before {
            border: @color-base-22 1px solid;
            height: 1rem;
            left: 1rem;
            top: 1rem;
            width: 1rem;
        }

        &.is--active::before {
            .mixin-icon-bg(@id: 'icon-011-s', @fillColor: @color-positive-13);
            border: 0;
            content: ' ';
            height: 3.2rem;
            left: 0;
            top: -.1rem;
            width: 3.3rem;
        }

        &.is--active:hover::before {
            .mixin-icon-bg(@id: 'icon-006-s', @fillColor: @color-negative-10);
        }

    }

    // single select (like radio buttons)

    &.filter--single {

        &::before {
            border-radius: .5rem;
            border: @color-base-22 1px solid;
            height: 1rem;
            left: 1rem;
            top: 1rem;
            width: 1rem;
        }

        &.is--active::before {
            background: @color-positive-13;
            border: none;
        }

    }

    // rating

    .rating {
        position: relative;
        top: -.2rem;
    }

}

.filterGroup:last-child .filter:last-child {
    border-bottom: 0;
}

// if js is enabled

.js & {

    // icons

    .filterGroup .filterGroup__header::after {
        content: ' ';
        height: 3.2rem;
        position: absolute;
        right: 0;
        top: 0;
        width: 3.2rem;
    }

    // chevron up icon

    .filterGroup .filterGroup__header::after {
        .mixin-icon-bg(@id: 'icon-010-s', @fillColor: @color-base-22);
    }

    .filterGroup .filterGroup__header:hover::after {
        .mixin-icon-bg(@id: 'icon-010-s', @fillColor: @color-base-15);
    }

    // chevron down icon

    .filterGroup.filterGroup--collapsed .filterGroup__header::after {
        .mixin-icon-bg(@id: 'icon-009-s', @fillColor: @color-base-22);
    }

    .filterGroup.filterGroup--collapsed .filterGroup__header:hover::after {
        .mixin-icon-bg(@id: 'icon-009-s', @fillColor: @color-base-15);
    }

}