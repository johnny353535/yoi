/** buttonsubtle.less */

// base
// ====

.button.button--subtle {

    background: transparent;
    border-color: @color-transparent;
    box-shadow: none;

    // interactive states

    &:hover {
        box-shadow: none;
        border-color: transparent;
    }

    &:active,
    &.is--active {
        border-color: transparent;
    }

    .constr-buttonSubtle(
        @txtColor: @color-base-8,
        @bgColorHover: @color-base-25,
        @bgColorActive: @color-base-23
    )

}

// modifiers
// =========

.button--subtle.button--primary {
    .constr-buttonSubtle(
        @txtColor: @color-primary-8,
        @bgColorHover: @color-primary-25,
        @bgColorActive: @color-primary-24
    )
}

.button--subtle.button--light {
    .constr-buttonSubtle(
        @txtColor: @color-white,
        @bgColorHover: fade(@color-white, 10%),
        @bgColorActive: fade(@color-white, 15%)
    )
}

.button--subtle.button--dark {
    .constr-buttonSubtle(
        @txtColor: @color-base-3,
        @bgColorHover: @color-base-22,
        @bgColorActive: @color-base-19
    )
}

.button--subtle.button--attention {
    .constr-buttonSubtle(
        @txtColor: @color-attention-6,
        @bgColorHover: @color-attention-22,
        @bgColorActive: @color-attention-20
    )
}

.button--subtle.button--negative {
    .constr-buttonSubtle(
        @txtColor: @color-negative-6,
        @bgColorHover: @color-negative-25,
        @bgColorActive: @color-negative-23
    )
}

.button--subtle.button--positive {
    .constr-buttonSubtle(
        @txtColor: @color-positive-6,
        @bgColorHover: @color-positive-23,
        @bgColorActive: @color-positive-21
    )
}

// constructor
// ===========

.constr-buttonSubtle(
    @txtColor,
    @bgColorHover,
    @bgColorActive) {

    color: @txtColor; 

    a&,
    a:link&,
    a:visited& {
        color: @txtColor;
    }

    &:hover {
        background: @bgColorHover;
        color: @txtColor;
    }

    &:active,
    &.is--active {
        background: @bgColorActive;
        color: @txtColor;
    }

    .icon circle, ellipse, path, polygon {
        fill: @txtColor;
    }

}