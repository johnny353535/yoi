/** buttonoutline.less */

// base
// ====

.btn.btn--outline {

    background: transparent;
    border-width: 2px;
    box-shadow: none;
    line-height: ~'calc(2rem - 4px)';
    padding: 0 ~'calc(.75rem - 4px)';
    text-shadow: none;

    // interactive states

    &:hover {
        background: transparent;
        box-shadow: none;
    }

    &:active {
        background: transparent;
    }

}

// modifiers
// =========

.btn--outline.btn--small {
    line-height: ~'calc(2rem - 4px)';
    padding: 0 ~'calc(.5rem - 4px)';
}

.btn--outline.btn--medium {
    line-height: ~'calc(2.5rem - 4px)';
    padding: 0 ~'calc(1rem - 4px)';
}

.btn--outline.btn--large {
    line-height: ~'calc(3rem - 4px)';
    padding: 0 ~'calc(1.5rem - 4px)';
}

.btn.btn--outline {
    .constr-btnOutline(
        @txtColor: @color-base-12,
        @borderColor: @color-base-21,
        @borderColorHover: @color-base-19,
        @borderColorActive: @color-base-17
    )
}

.btn--outline.btn--primary {
    .constr-btnOutline(
        @txtColor: @color-primary-12,
        @borderColor: @color-primary-19,
        @borderColorHover: @color-primary-16,
        @borderColorActive: @color-primary-13
    )
}

.btn--outline.btn--light {
    .constr-btnOutline(
        @txtColor: @color-white,
        @borderColor: fade(@color-white,60%),
        @borderColorHover: fade(@color-white,80%),
        @borderColorActive: @color-white
    )
}

.btn--outline.btn--dark {
    .constr-btnOutline(
        @txtColor: @color-base-10,
        @borderColor: @color-base-15,
        @borderColorHover: @color-base-12,
        @borderColorActive: @color-base-9
    )
}

.btn--outline.btn--attention {
    .constr-btnOutline(
        @txtColor: @color-attention-10,
        @borderColor: @color-attention-15,
        @borderColorHover: @color-attention-12,
        @borderColorActive: @color-attention-9
    )
}

.btn--outline.btn--negative {
    .constr-btnOutline(
        @txtColor: @color-negative-12,
        @borderColor: @color-negative-15,
        @borderColorHover: @color-negative-11,
        @borderColorActive: @color-negative-9
    )
}

.btn--outline.btn--positive {
    .constr-btnOutline(
        @txtColor: @color-positive-12,
        @borderColor: @color-positive-17,
        @borderColorHover: @color-positive-15,
        @borderColorActive: @color-positive-12
    )
}

// constructor
// ===========

.constr-btnOutline(
    @txtColor,
    @borderColor,
    @borderColorHover,
    @borderColorActive) {

    border-color: @borderColor;
    color: @txtColor;

    a&,
    a:link&,
    a:visited& {
        color: @txtColor;
    }

    &:hover {
        color: @txtColor;
        border-color: @borderColorHover;
    }

    &:active {
        color: @txtColor;
        border-color: @borderColorActive;
    }

    .icon circle, ellipse, path, polygon {
        fill: @txtColor;
    }

}
