/** buttondismiss.less */

// block
// =====

.buttonDismiss {

    .mixin-clearAppearance;
    .mixin-defaultBorderRadius;
    .mixin-icon-x(@color: @color-base-15);
    border: 0;
    cursor: pointer;
    display: inline-block;
    font-size: 0;
    height: 2rem;
    overflow: hidden;
    position: absolute;
    right: 0;
    text-color: transparent;
    top: 0;
    width: 2rem;

    &:hover {
        .mixin-icon-x(@color: @color-base-10);
    }

}

// modifiers
// =========

// colors

/*
    Any .buttonDismiss inside a parent element with a certain color modifier "inherit" the colors of their parent.
    However, the color modifier class names applied directly to .buttonDismiss (eg. buttonDismiss buttonDismiss--negative)
    beat the inheritance. In order to up the specificity, we repeat the modifier class name. It's actually
    not even a hack:

    "Repeated occurrances of the same simple selector are allowed and do increase specificity."
    https://www.w3.org/TR/css3-selectors/#specificity
*/

.buttonDismiss.buttonDismiss--negative.buttonDismiss--negative,
[class*="-negative"] .buttonDismiss {
    .constr-buttonDismiss(
        @iconColor: @color-negative-10,
        @iconColorHover: @color-negative-5
    );
}

.buttonDismiss.buttonDismiss--positive.buttonDismiss--positive,
[class*="-positive"] .buttonDismiss {
    .constr-buttonDismiss(
        @iconColor: @color-positive-10,
        @iconColorHover: @color-positive-5
    );
}

.buttonDismiss.buttonDismiss--attention.buttonDismiss--attention,
[class*="-attention"] .buttonDismiss {
    .constr-buttonDismiss(
        @iconColor: @color-attention-10,
        @iconColorHover: @color-attention-5
    );
}

.buttonDismiss.buttonDismiss--dark.buttonDismiss--dark,
[class*="-dark"] .buttonDismiss {
    .constr-buttonDismiss(
        @iconColor: @color-base-23,
        @iconColorHover: @color-white
    );
}

// constructor
// ===========

.constr-buttonDismiss(@iconColor, @iconColorHover) {

    .mixin-icon-x(@color: @iconColor);

    &:hover {
        .mixin-icon-x(@color: @iconColorHover);
    }

}
