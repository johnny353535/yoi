/** icon.less */

// block
// =====

.icon {
    display: inline-block;
    fill: none;
    height: 2rem;
    stroke-width: 2px;
    stroke: currentColor;
    width: 2rem;
}

// modifiers
// =========

// size

.icon--small {
    width: 1.5rem;
    height: 1.5rem;
}

.icon--large {
    width: 3rem;
    height: 3rem;
}

.icon--xlarge {
    width: 4rem;
    height: 4rem;
}

.icon--thin {
    stroke-width: 1px;
}

.icon--bold {
    stroke-width: 4px;
}

// color

/*
    Any .icon inside a parent element with a certain color modifier "inherit" the colors of their parent.
    However, the color modifier class names applied directly to .buttonDismiss (eg. icon icon--negative)
    beat the inheritance. In order to up the specificity, we repeat the modifier class name. It's actually
    not even a hack:

    "Repeated occurrances of the same simple selector are allowed and do increase specificity."
    https://www.w3.org/TR/css3-selectors/#specificity
*/

[class*="--attention"] .icon,
.icon.icon--attention.icon--attention {
    stroke: @color-attention-8;
}

[class*="--positive"] .icon,
.icon.icon--positive.icon--positive {
    stroke: @color-positive-8;
}

[class*="--negative"] .icon,
.icon.icon--negative.icon--negative {
    stroke: @color-negative-8;
}
