/** icon.less */

// block
// =====

.icon {

    display: inline-block;
    width: 3.2rem;
    height: 3.2rem;

    svg {
        width: 3.2rem;
        height: 3.2rem;
    }

}

// modifiers
// =========

// size

.icon--small {

    width: 2.4rem;
    height: 2.4rem;

    svg {
        width: 2.4rem;
        height: 2.4rem;
    }

}

.icon--large {

    width: 4.8rem;
    height: 4.8rem;

    svg {
        width: 4.8rem;
        height: 4.8rem;
    }

}

.icon--xlarge {

    width: 6.4rem;
    height: 6.4rem;

    svg {
        width: 6.4rem;
        height: 6.4rem;
    }

}

// color

/*
    Any .icon inside a parent element with a certain color modifier "inherit" the colors of their parent.
    However, the color modifier class names applied directly to .btnDismiss (eg. icon icon--negative)
    beat the inheritance. In order to up the specificity, we repeat the modifier class name. It's actually
    not even a hack:

    "Repeated occurrances of the same simple selector are allowed and do increase specificity."
    https://www.w3.org/TR/css3-selectors/#specificity
*/

[class*="--attention"] .icon,
.icon.icon--attention.icon--attention {
    circle, ellipse, path, polygon {
        fill: @color-attention-8;
    }
}

[class*="--positive"] .icon,
.icon.icon--positive.icon--positive {
    circle, ellipse, path, polygon {
        fill: @color-positive-8;
    }
}

[class*="--negative"] .icon,
.icon.icon--negative.icon--negative {
    circle, ellipse, path, polygon {
        fill: @color-negative-8;
    }
}